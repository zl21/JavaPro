/*
(成员变量和局部变量的区别)
* A:在类中的位置不同
	* 成员变量：在类中方法外
	* 局部变量：在方法定义中或者方法声明上
* B:在内存中的位置不同
	* 成员变量：在堆内存(成员变量属于对象,对象进堆内存)
	* 局部变量：在栈内存(局部变量属于方法,方法进栈内存)
* C:生命周期不同
	* 成员变量：随着对象的创建而存在，随着对象的消失而消失
	* 局部变量：随着方法的调用而存在，随着方法的调用完毕而消失
* D:初始化值不同
	* 成员变量：有默认初始化值null 
	* 局部变量：没有默认初始化值，必须定义，赋值，然后才能使用。
	
* 注意事项：
	* 局部变量名称可以和成员变量名称一样，在方法中使用的时候，采用的是就近原则。
	* 基本数据类型变量包括哪些:byte,short,int,long,float,double,boolean,char
	* 引用数据类型(array、class、interface)变量包括哪些:数组,类,接口,枚举
*/
class Demo4_Person {
	public static void main(String[] args) {
		Person p = new Person();
		p.speck();		
	}
}
class Person {
	String name;	
	int num;		//成员变量。每new一次，就在堆里面生成一个对象。

	public void speck() {
		int num = 10;	//局部变量，属于speck方法，所以在栈里面。
		System.out.println(name);
		System.out.println(num);	//方法中有num就优先使用自己的num，没有的话再考虑类中的成员变量。
	}
}
